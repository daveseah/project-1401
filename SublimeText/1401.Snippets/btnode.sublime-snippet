<snippet>
	<content><![CDATA[
/* behavior tree node $1 */
define ([
	'1401/objects/behaviors/nodes/base',
//	'1401/objects/behaviors/nodes/action'
//	'1401/objects/behaviors/nodes/decorator'
//	'1401/objects/behaviors/nodes/condition'
], function ( 
	BN,
//	Action || Condition || Decorator
) {		

/// $2: $1 ///
/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
/* subclass from $2 */
function ${1:BehaviorNode} ( read_only_conf ) {
	// call the parent constructor
	// BN.Condition, BN.Action, or BN.Decorator
	${2:Action}.call (this);	
	// save configuration if any, set common flags
	this.SaveConfig( read_only_conf );
	// each node has a name
	this.node_type = BN.TYPE.$2;
	this.node_class = '$1';
	this.AutoName();
}
/* inheritance */
$1.inheritsFrom($2);

/* overrides */
// $1.method( 'Enter', function ( pish ) { });
// $1.method( 'Open', function ( pish ) { });
$1.method( 'Tick', function ( pish, int_ms ) {
	$0
	return BN.SUCCESS;	// or BN.FAILURE or BN.RUNNING
});
// $1.method( 'Close', function ( pish ) { });
// $1.method( 'Exit', function ( pish ) { });

/*/////////////////////////////////////////////////////////////////////////////

   Helpful Debug
   read_only_conf has special properties set by this.SaveConfig()
      this.DBG            - set if 'config.trace' is defined
                            use to activate debug messages in the behavior
                            node when authoring

   Helpful Methods
      this.MasterTime()   - current time in ms elapsed
      this.Children()     - return childnode array
      this.HasChildren()  - return true if not empty childnode array
      pish.ai.blackboard  - access blackboard
      pish.ai.behavior    - access behavior tree running the piece
      this.DBG            - set true if config.debug was true

   Blackboard Local Memory is unique for every node in a piece's BT:
      this.BBGet(pish,key) 
      this.BBSet(pish,key,val)

   Blackboard Tree Memory is shared by all pieces using that tree
   in pish.ai.blackboard:
      TreeMemGet(tree_id, key)
      TreeMemSet(tree_id, key, val)

   Blackboard Agent Memory is shared by all nodes running in a piece
   in pish.ai.blackboard:
      AgentMemGet(key)
      AgentMemSet(key, val)

/*/////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
/** RETURN CONSTRUCTOR *******************************************************/
	return $1;

});
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>/1401btnode</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope></scope>
	<description>1401 behavior tree node subclass</description>
</snippet>
